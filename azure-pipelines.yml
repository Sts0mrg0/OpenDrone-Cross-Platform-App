# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  scheme: 'OpenDrone'
  configuration: 'Release'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

- script: |
    npm install
  displayName: 'npm install'
  
- script: |
    cd android
    chmod +x gradlew
    ./gradlew bundleRelease
  displayName: 'Build Android'

- task: AndroidSigning@3
  inputs:
    apkFiles: '**/*.apk'
    apksign: true
    apksignerKeystoreFile: 'OpenDrone_Keystore.jks'
    apksignerKeystorePassword: '$(keystore_password)'
    apksignerKeystoreAlias: '$(key_alias)'
    apksignerKeyPassword: '$(key_password)'
    apksignerArguments: '--out $(Build.SourcesDirectory)/OpenDrone.release.apk'
    zipalign: false

- task: CopyFiles@2
  inputs:
    SourceFolder: $(Build.SourcesDirectory)
    contents: '**/*.release.apk' 
    targetFolder: '$(Build.ArtifactStagingDirectory)'
    overWrite: true

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'apks' 
    publishLocation: 'container'

- task: GitHubRelease@1
  inputs:
    gitHubConnection: 'OpenDroneGithubConnection'
    repositoryName: 'OpenDroneAT/OpenDrone-Cross-Platform-App'
    action: 'create'
    target: '$(Build.SourceVersion)'
    tagSource: 'userSpecifiedTag'
    tag: '$(Build.BuildNumber)'
    title: 'Automatic Azure DevOps Release $(Build.BuildNumber)'
    releaseNotesSource: 'inline'
    releaseNotesInline: 'Automatic Azure DevOps Release'
    assets: |
         $(Build.ArtifactStagingDirectory)/*.apk
    isPreRelease: true
    addChangeLog: false

  
